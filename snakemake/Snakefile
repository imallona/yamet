import os.path as op
import glob

CHROMS = ['chr' + str(c) for c in range(1, 5)]

SAMPLES = glob.glob(op.join('test_data', '*.bam'))

BAMS = {op.splitext(op.basename(sample))[0] : sample for sample in SAMPLES}
SORTED = {sample : op.join('sorted', sample + '.bam') for sample in BAMS.keys()}
INDEXED =  {sample : op.join('sorted', sample + '.bam.bai') for sample in BAMS.keys()}
SPLIT =  expand("split/{sample}_{chrom}.bam",
            sample =  BAMS.keys(),
            chrom = CHROMS)

print(CHROMS)
print(SAMPLES)
print(SORTED)
print(INDEXED)
print(SPLIT)
# print(expand("{sample}_{chrom}.bam", sample = INDEXED, chrom = CHROMS))

rule all:
    input:
        # INDEXED.values(), SPLIT
        SPLIT
      
# rule wtf_how_to_split_the_bamfile_by_chromosome:
#     input:
#         SPLIT
#     output:
#         "test.out"
#     shell:
#         "touch {output}"
           

rule split_by_chrom:
    input:
        "sorted/{sample}.bam"
    output:
        "split/{sample}_{chrom}.bam"
    shell:
        "samtools view -b {input} > {output}"
 
rule samtools_index:
    input:
        "sorted/{sample}.bam"
    output:
        "sorted/{sample}.bam.bai"
    shell:
        "samtools index {input} > {output}"

rule samtools_sort:
    input:
        "test_data/{sample}.bam"
    output:
        "sorted/{sample}.bam"
    shell:
        """
        samtools sort {input} {output}
         mv {output}.bam {output}
        """
